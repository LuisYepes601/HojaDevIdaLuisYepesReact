{"ast":null,"code":"// Servicio API real para CRUD de experiencias profesionales\n\n// üîπ Aqu√≠ definimos la URL base de tu API en Render\nconst API_BASE_URL = 'https://hojadevidaapi.onrender.com/api';\n\n// üîπ Obtener todas las experiencias\nexport const getExperiences = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/experiencias`);\n    if (!response.ok) {\n      throw new Error(`Error al obtener experiencias: ${response.status} ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"‚ùå Error en getExperiences:\", error);\n    throw error;\n  }\n};\n\n// üîπ Crear una nueva experiencia\nexport const createExperience = async experienceData => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/experiencias`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(experienceData)\n    });\n    if (!response.ok) {\n      throw new Error(`Error al crear experiencia: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"‚ùå Error en createExperience:\", error);\n    throw error;\n  }\n};\n\n// üîπ Actualizar una experiencia existente\nexport const updateExperience = async (_id, experienceData) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/experiencias/${_id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(experienceData)\n    });\n    if (!response.ok) {\n      throw new Error(`Error al actualizar experiencia: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"‚ùå Error en updateExperience:\", error);\n    throw error;\n  }\n};\n\n// üîπ Eliminar una experiencia\nexport const deleteExperience = async _id => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/experiencias/${_id}`, {\n      method: 'DELETE'\n    });\n    if (!response.ok) {\n      throw new Error(`Error al eliminar experiencia: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"‚ùå Error en deleteExperience:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","getExperiences","response","fetch","ok","Error","status","statusText","json","error","console","createExperience","experienceData","method","headers","body","JSON","stringify","updateExperience","_id","deleteExperience"],"sources":["C:/Users/Usuario/Downloads/hoja de vida luis.zip_unzipped/hoja de vida luis.zip_unzipped/src/services/apiService.js"],"sourcesContent":["// Servicio API real para CRUD de experiencias profesionales\n\n// üîπ Aqu√≠ definimos la URL base de tu API en Render\nconst API_BASE_URL = 'https://hojadevidaapi.onrender.com/api';\n\n// üîπ Obtener todas las experiencias\nexport const getExperiences = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/experiencias`);\n    if (!response.ok) {\n      throw new Error(`Error al obtener experiencias: ${response.status} ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"‚ùå Error en getExperiences:\", error);\n    throw error;\n  }\n};\n\n// üîπ Crear una nueva experiencia\nexport const createExperience = async (experienceData) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/experiencias`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(experienceData),\n    });\n    if (!response.ok) {\n      throw new Error(`Error al crear experiencia: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"‚ùå Error en createExperience:\", error);\n    throw error;\n  }\n};\n\n// üîπ Actualizar una experiencia existente\nexport const updateExperience = async (_id, experienceData) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/experiencias/${_id}`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(experienceData),\n    });\n    if (!response.ok) {\n      throw new Error(`Error al actualizar experiencia: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"‚ùå Error en updateExperience:\", error);\n    throw error;\n  }\n};\n\n// üîπ Eliminar una experiencia\nexport const deleteExperience = async (_id) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/experiencias/${_id}`, {\n      method: 'DELETE',\n    });\n    if (!response.ok) {\n      throw new Error(`Error al eliminar experiencia: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"‚ùå Error en deleteExperience:\", error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA;;AAEA;AACA,MAAMA,YAAY,GAAG,wCAAwC;;AAE7D;AACA,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,eAAe,CAAC;IAC5D,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,kCAAkCH,QAAQ,CAACI,MAAM,IAAIJ,QAAQ,CAACK,UAAU,EAAE,CAAC;IAC7F;IACA,OAAO,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,gBAAgB,GAAG,MAAOC,cAAc,IAAK;EACxD,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,eAAe,EAAE;MAC3Da,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,cAAc;IACrC,CAAC,CAAC;IACF,IAAI,CAACV,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,+BAA+BH,QAAQ,CAACI,MAAM,EAAE,CAAC;IACnE;IACA,OAAO,MAAMJ,QAAQ,CAACM,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMS,gBAAgB,GAAG,MAAAA,CAAOC,GAAG,EAAEP,cAAc,KAAK;EAC7D,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,iBAAiBmB,GAAG,EAAE,EAAE;MAClEN,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,cAAc;IACrC,CAAC,CAAC;IACF,IAAI,CAACV,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,oCAAoCH,QAAQ,CAACI,MAAM,EAAE,CAAC;IACxE;IACA,OAAO,MAAMJ,QAAQ,CAACM,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMW,gBAAgB,GAAG,MAAOD,GAAG,IAAK;EAC7C,IAAI;IACF,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,iBAAiBmB,GAAG,EAAE,EAAE;MAClEN,MAAM,EAAE;IACV,CAAC,CAAC;IACF,IAAI,CAACX,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,kCAAkCH,QAAQ,CAACI,MAAM,EAAE,CAAC;IACtE;IACA,OAAO,MAAMJ,QAAQ,CAACM,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}