{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USUARIO\\\\OneDrive\\\\Desktop\\\\luis pagina web react\\\\hoja de vida luis.zip_unzipped\\\\src\\\\pages\\\\Admin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ExperienceForm from '../components/ExperienceForm';\nimport ExperienceList from '../components/ExperienceList';\nimport { getExperiences, createExperience, updateExperience, deleteExperience } from '../services/apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Admin = () => {\n  _s();\n  const [experiences, setExperiences] = useState([]);\n  const [editingExperience, setEditingExperience] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    loadExperiences();\n  }, []);\n  const loadExperiences = async () => {\n    try {\n      setLoading(true);\n      const data = await getExperiences();\n      setExperiences(data);\n    } catch (err) {\n      setError('Error al cargar las experiencias');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCreate = async experienceData => {\n    try {\n      await createExperience(experienceData);\n      await loadExperiences();\n    } catch (err) {\n      setError('Error al crear la experiencia');\n      console.error(err);\n    }\n  };\n  const handleUpdate = async (id, experienceData) => {\n    try {\n      await updateExperience(id, experienceData);\n      await loadExperiences();\n      setEditingExperience(null);\n    } catch (err) {\n      setError('Error al actualizar la experiencia');\n      console.error(err);\n    }\n  };\n  const handleDelete = async id => {\n    if (window.confirm('¿Estás seguro de que quieres eliminar esta experiencia?')) {\n      try {\n        await deleteExperience(id);\n        await loadExperiences();\n      } catch (err) {\n        setError('Error al eliminar la experiencia');\n        console.error(err);\n      }\n    }\n  };\n  const handleEdit = experience => {\n    setEditingExperience(experience);\n  };\n  const handleCancelEdit = () => {\n    setEditingExperience(null);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Cargando...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Panel Administrativo - Experiencias Profesionales\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: editingExperience ? 'Editar Experiencia' : 'Nueva Experiencia'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ExperienceForm, {\n          onSubmit: editingExperience ? data => handleUpdate(editingExperience.id, data) : handleCreate,\n          initialData: editingExperience,\n          onCancel: editingExperience ? handleCancelEdit : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-list-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Lista de Experiencias\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ExperienceList, {\n          experiences: experiences,\n          onEdit: handleEdit,\n          onDelete: handleDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Admin, \"x9BOKTL0heIFIWz2fqBf6C0DKeo=\");\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","ExperienceForm","ExperienceList","getExperiences","createExperience","updateExperience","deleteExperience","jsxDEV","_jsxDEV","Admin","_s","experiences","setExperiences","editingExperience","setEditingExperience","loading","setLoading","error","setError","loadExperiences","data","err","console","handleCreate","experienceData","handleUpdate","id","handleDelete","window","confirm","handleEdit","experience","handleCancelEdit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","initialData","onCancel","onEdit","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/USUARIO/OneDrive/Desktop/luis pagina web react/hoja de vida luis.zip_unzipped/src/pages/Admin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ExperienceForm from '../components/ExperienceForm';\nimport ExperienceList from '../components/ExperienceList';\nimport { getExperiences, createExperience, updateExperience, deleteExperience } from '../services/apiService';\n\nconst Admin = () => {\n  const [experiences, setExperiences] = useState([]);\n  const [editingExperience, setEditingExperience] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    loadExperiences();\n  }, []);\n\n  const loadExperiences = async () => {\n    try {\n      setLoading(true);\n      const data = await getExperiences();\n      setExperiences(data);\n    } catch (err) {\n      setError('Error al cargar las experiencias');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCreate = async (experienceData) => {\n    try {\n      await createExperience(experienceData);\n      await loadExperiences();\n    } catch (err) {\n      setError('Error al crear la experiencia');\n      console.error(err);\n    }\n  };\n\n  const handleUpdate = async (id, experienceData) => {\n    try {\n      await updateExperience(id, experienceData);\n      await loadExperiences();\n      setEditingExperience(null);\n    } catch (err) {\n      setError('Error al actualizar la experiencia');\n      console.error(err);\n    }\n  };\n\n  const handleDelete = async (id) => {\n    if (window.confirm('¿Estás seguro de que quieres eliminar esta experiencia?')) {\n      try {\n        await deleteExperience(id);\n        await loadExperiences();\n      } catch (err) {\n        setError('Error al eliminar la experiencia');\n        console.error(err);\n      }\n    }\n  };\n\n  const handleEdit = (experience) => {\n    setEditingExperience(experience);\n  };\n\n  const handleCancelEdit = () => {\n    setEditingExperience(null);\n  };\n\n  if (loading) return <div className=\"loading\">Cargando...</div>;\n  if (error) return <div className=\"error\">{error}</div>;\n\n  return (\n    <div className=\"admin-container\">\n      <h1>Panel Administrativo - Experiencias Profesionales</h1>\n\n      <div className=\"admin-content\">\n        <div className=\"admin-form-section\">\n          <h2>{editingExperience ? 'Editar Experiencia' : 'Nueva Experiencia'}</h2>\n          <ExperienceForm\n            onSubmit={editingExperience ? (data) => handleUpdate(editingExperience.id, data) : handleCreate}\n            initialData={editingExperience}\n            onCancel={editingExperience ? handleCancelEdit : null}\n          />\n        </div>\n\n        <div className=\"admin-list-section\">\n          <h2>Lista de Experiencias</h2>\n          <ExperienceList\n            experiences={experiences}\n            onEdit={handleEdit}\n            onDelete={handleDelete}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Admin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}